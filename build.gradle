
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.8'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.6"
}

def templateDir = project.file("template").getAbsoluteFile()

allprojects {
    apply plugin: "eclipse"
    apply plugin: 'net.ltgt.errorprone'

    group = 'nl.weeaboo.vn'
    version = '4.0.0-alpha9'
    ext {
        appName = 'NVList'
        
        gdxVersion = '1.9.3'
        gdxVideoVersion = '0.0.2-anonl'
        junitVersion = '4.12'
        slf4jVersion = '1.7.21'
        guavaVersion = '19.0'
        errorProneVersion = '2.0.9'
        
        styledTextVersion = '1.5.0'
        luajpp2Version = '2.3.10'
        tcommonVersion = '1.1.1'
        
        vnRootDir = templateDir
        vnResDir = new File(vnRootDir, "res")
    }

    repositories {
        jcenter()
        maven { url "https://dl.bintray.com/anonl/gdx-styledtext/" }
        maven { url "https://dl.bintray.com/anonl/gdx-video/" }
        maven { url "https://dl.bintray.com/anonl/luajpp2/" }
        maven { url "https://dl.bintray.com/anonl/tcommon/" }
    }
    
    plugins.withType(JavaPlugin) {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'        
    }
    
    dependencies {
        errorprone "com.google.errorprone:error_prone_core:$errorProneVersion"
    }
    
    configurations.errorprone {
        resolutionStrategy.force 'com.google.errorprone:error_prone_core:2.0.9'
    }    
}

project(':nvlist-api') {
    apply plugin: 'java'
    
    dependencies {
        compile "nl.weeaboo.common:tcommon-core:$tcommonVersion"
        compile "nl.weeaboo.common:tcommon-logging:$tcommonVersion"
        compile "nl.weeaboo.gdx-styledtext:styledtext-api:$styledTextVersion"
        compile "com.google.guava:guava:$guavaVersion"
        
        testCompile "junit:junit:$junitVersion"
    }
}

project(':nvlist-core') {
    apply plugin: 'java'

    dependencies {
        compile project(":nvlist-api")
        compile "nl.weeaboo.luajpp2:luajpp2-core:$luajpp2Version"
        compile "nl.weeaboo.gdx-styledtext:styledtext-impl:$styledTextVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"        
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"        
        compile "com.badlogicgames.gdx:gdx-jnigen:$gdxVersion"        
        compile "nl.weeaboo.gdx.video:gdx-video:$gdxVideoVersion:"
    
        testCompile "junit:junit:$junitVersion"
        testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testRuntime "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testRuntime "org.slf4j:slf4j-jdk14:$slf4jVersion"
    }
}

project(':nvlist-desktop') {
    apply plugin: 'java'

    dependencies {
        compile project(":nvlist-core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-lwjgl3:$gdxVersion"
        
        runtime "org.slf4j:slf4j-jdk14:$slf4jVersion"
        runtime "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        runtime "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
        runtime "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        runtime "nl.weeaboo.gdx.video:gdx-video-desktop:$gdxVideoVersion"
        runtime "nl.weeaboo.gdx.video:gdx-video-desktop-natives:$gdxVideoVersion"
        
        testCompile "junit:junit:$junitVersion"
    }
}

project(':nvlist-android') {
    // apply plugin: 'com.android.library'
    apply plugin: 'com.android.application'
    apply plugin: 'com.github.dcendents.android-maven'

    configurations { natives }

    dependencies {
        compile project(":nvlist-api")
        compile(project(":nvlist-core")) {
            exclude group: "com.badlogicgames.gdx", module: "gdx-backend-headless"
            exclude group: "com.badlogicgames.gdx", module: "gdx-platform"
        }
        compile "nl.weeaboo.common:tcommon-core:$tcommonVersion"
        compile "nl.weeaboo.luajpp2:luajpp2-core:$luajpp2Version"
        compile "nl.weeaboo.gdx-styledtext:styledtext-api:$styledTextVersion"
        compile "nl.weeaboo.gdx-styledtext:styledtext-impl:$styledTextVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:slf4j-android:$slf4jVersion"
        compile "com.google.guava:guava:$guavaVersion"
    
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"        
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        compile "nl.weeaboo.gdx.video:gdx-video-android:$gdxVideoVersion"
        
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion"
    }
    
    android {
        buildToolsVersion '23.0.2'
        compileSdkVersion 'android-23'
        
        sourceSets {
            main {
                manifest.srcFile 'AndroidManifest.xml'
                java.srcDirs = ['src']
                aidl.srcDirs = ['src']
                renderscript.srcDirs = ['src']
                res.srcDirs = ['res']
                assets.srcDirs = ['template/res']
                jniLibs.srcDirs = ['libs']
            }
    
            instrumentTest.setRoot('tests')
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_6
            targetCompatibility JavaVersion.VERSION_1_6
        }    
        defaultConfig {
            minSdkVersion 8
            targetSdkVersion 23
        }
        lintOptions {
            textOutput 'stdout'
            textReport true
        }
    }
}

apply plugin: 'maven-publish'

publishing {
    publications {
        api(MavenPublication) {
            from project(':nvlist-api').components.java
            artifactId 'nvlist-api'
        }
        core(MavenPublication) {
            from project(':nvlist-core').components.java
            artifactId 'nvlist-core'
        }
        desktop(MavenPublication) {
            from project(':nvlist-desktop').components.java
            artifactId 'nvlist-desktop'
        }
        android(MavenPublication) {
            def androidProj = project(':nvlist-android')
            def configs = androidProj.configurations
            
            // Manually configure artifact and dependencies (Android plugin doesn't supply a component)
            artifact "${androidProj.buildDir}/outputs/aar/${androidProj.name}-release.aar"            

            // Gather dependencies
            def projectDeps = []
            projectDeps += configs.runtime.getResolvedConfiguration().getFirstLevelModuleDependencies()
            projectDeps += configs.natives.getResolvedConfiguration().getFirstLevelModuleDependencies()
            
            pom.withXml {
                def depsNode = asNode().appendNode('dependencies')
                projectDeps.each {
                    def depNode = depsNode.appendNode('dependency')
                    depNode.appendNode('groupId', it.moduleGroup)
                    depNode.appendNode('artifactId', it.moduleName)
                    depNode.appendNode('version', it.moduleVersion)
                }
            }
            
            artifactId 'nvlist-android'
        }
    }
    repositories {
        maven {
            // Local repo for testing
            url "$buildDir/repo"
        }
    }    
}

bintray {   
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['api', 'core', 'desktop', 'android']
    pkg {
        repo = 'nvlist'
        name = 'nvlist'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/anonl/nvlist.git'
        version {
            name = project.version
        }
    }
}
