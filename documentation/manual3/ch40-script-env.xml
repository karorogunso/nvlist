<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="style/default.xsl"?>

<section>
  <section title="Lua Environment" level="1">
    <section title="Global Variables" level="2">
      <table>
        <tr>
          <th>screenWidth, screenHeight</th>
          <td>The virtual screen dimensions as defined in game.ini</td>
        </tr>
        <tr>
          <th>android</th>
          <td>Is set to <code>true</code> when running on Android.</td>
        </tr>
        <tr>
          <th>scriptDebug</th>
          <td>Is set to <code>true</code> when running in debug mode.</td>
        </tr>
        <tr>
          <th>quickRead</th>
          <td>Is set to <code>true</code> while skipping.</td>
        </tr>
        <tr>
          <th>effectSpeed</th>
          <td>Relative speed at which animations should run. The effect speed can change when for example the user hold the skip key.</td>
        </tr>
        <tr>
          <th>prefs</th>
          <td>Lua table storing the values of all preferences starting with &quot;vn.&quot;</td>
        </tr>
        <tr>
          <th>Keys</th>
          <td>Lua table storing the mapping from keyboard key names to key codes for use with <code>input</code>.</td>
        </tr>
        <tr>
          <th>Interpolators</th>
          <td>Stores the static fields of <javadoc-link class="nl.weeaboo.vn.impl.base.Interpolators">Interpolators</javadoc-link> as key/value pairs. You can als convert a Lua function to an <javadoc-link class="nl.weeaboo.vn.IInterpolator">IInterpolator</javadoc-link> by calling: <code>Interpolators.get(f)</code> (where f is a function).</td>
        </tr>
        <tr>
          <th>Screens</th>
          <td>Lua table storing references to user interface screens. To customize, replace the references with your own compatible implementations or simply change the screen definitions in <code>screens.lua</code>.</td>
        </tr>                
      </table>      
      
      <br/>
      
      <section title="Screens" level="3">
        <table>
          <tr>
            <th>Screens.save</th><td>Save screen</td>
          </tr>
          <tr>
            <th>Screens.load</th><td>Load screen</td>
          </tr>
          <tr>
            <th>Screens.choice</th><td>Screen shown when choice() is called</td>
          </tr>
          <tr>
            <th>Screens.textLog</th><td>Screen showing previously read text</td>
          </tr>
        </table>
      </section>
      
    </section>
    
    <section title="Java Objects" level="2">
      <p>Some Java objects are available as global variables in Lua.</p>
      <sourcecode lang="lvn"><![CDATA[#Print a message to the screen using the notifier
@notifier:message("Hello World")]]></sourcecode>
  
      <table>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.IImageState">imageState</javadoc-link></th>
          <td>Stores all drawables and layers.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.ISoundState">soundState</javadoc-link></th>
          <td>Stores all currently playing audio files.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.IVideoState">videoState</javadoc-link></th>
          <td>Stores all playing video files.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.ITextState">textState</javadoc-link></th>
          <td>Manages settings and implements logic related to the primary text box and text log.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.IInput">input</javadoc-link></th>
          <td>Allows access to the mouse/keyboard buttons pressed by the user.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.INotifier">notifier</javadoc-link></th>
          <td>Shows short information messages in the top-right of the screen. Can be used to print debug information, errors, etc.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.IStorage">globals</javadoc-link></th>
          <td>An object for storing global flags/counters/variables. Used as the back end for <code>setGlobal</code> etc.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.IPersistentStorage">sharedGlobals</javadoc-link></th>
          <td>Functions like <code>globals</code>, but for storing data that's shared between all save files. Used as the back end for <code>setSharedGlobal</code> etc.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.ISeenLog">seenLog</javadoc-link></th>
          <td>Stores information about images/sounds/videos/text lines seen by the user.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.IAnalytics">analytics</javadoc-link></th>
          <td>Stores runtime statistics. The analytics are later used to generate the preloader configuration file.</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.ITimer">timer</javadoc-link></th>
          <td>Provides access to an ITimer object for determining and displaying play time.</td>
        </tr>
      </table>
    </section>
        
    <section title="Java Enumerations" level="2">
      <p>Enumerations are made available to Lua as global tables.</p>
      <sourcecode lang="lvn"><![CDATA[#Change a drawable's blend mode to ADD
@img:setBlendMode(BlendMode.ADD)]]></sourcecode>
    
      <table>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.ErrorLevel">ErrorLevel</javadoc-link></th>
          <td>VERBOSE, DEBUG, WARNING, MESSAGE, ERROR</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.BlendMode">BlendMode</javadoc-link></th>
          <td>DEFAULT, OPAQUE, ADD</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.SoundType">SoundType</javadoc-link></th>
          <td>SOUND, MUSIC, VOICE</td>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.LoopMode">LoopMode</javadoc-link></th>
          <td>NOWRAP, WRAP, BOUNCE, SINE</td>
        </tr>
      </table>
    </section>
  
    <section title="Java Classes" level="2">
      <p>Some Java classes can be instantiated directly from Lua code.</p>
      <sourcecode lang="lvn"><![CDATA[#Create a new looper object
  @local looper = Looper.new(0.01)]]></sourcecode>
      
      <table>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.Looper">Looper</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.math.MutableMatrix">Matrix</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.ShaderImageTween">ShaderImageTween</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.ShutterGS">ShutterGS</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.WipeGS">WipeGS</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.BlendGS">BlendGS</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.BlurGS">BlurGS</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.impl.base.DistortGS">DistortGS</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.layout.NullLayout">NullLayout</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.layout.FlowLayout">FlowLayout</javadoc-link></th>
        </tr>
        <tr>
          <th><javadoc-link class="nl.weeaboo.vn.layout.GridLayout">GridLayout</javadoc-link></th>
        </tr>
      </table>
    </section>
    
  </section>
  
  <section title="Linking Java to Lua" level="1">
    <section title="Instantiating Java Objects" level="2">
      <p>It's possible use custom Java classes from within Lua. Use the <code>registerJavaClass</code> function to register a class constructor, then <code><em>&lt;SimpleClassName&gt;</em>.new</code> to create a new instance of the class. You only need to register the class once at the beginning of the program.</p>
      <sourcecode lang="lvn"><![CDATA[@registerJavaClass("java.lang.Integer")
@local myInt = Integer.new(12345)
@print(myInt:intValue())]]></sourcecode>
      <p>Classes registered in this way should implement either <code>Serializable</code> or <code>Externalizable</code> and be marked with the <code>nl.weeaboo.lua2.io.LuaSerializable</code> annotation.</p>
    </section>
  </section>
  
</section>
